[
    {
        "id": "6705bbb95f3252fd",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "289a27507fb48f90",
        "type": "group",
        "z": "6705bbb95f3252fd",
        "name": "Input",
        "style": {
            "label": true
        },
        "nodes": [
            "c2f5c11bd2d0da4d",
            "51584db6980c1f5a",
            "741c254551d25eaa",
            "71b3fea8f5cfa766",
            "1e7b1c0c85ee8581",
            "847ba2ae7bb5c2d8",
            "f45716bacfc54c28"
        ],
        "x": 14,
        "y": 19,
        "w": 352,
        "h": 322
    },
    {
        "id": "b2946fec93a18c24",
        "type": "group",
        "z": "6705bbb95f3252fd",
        "name": "Output",
        "style": {
            "label": true
        },
        "nodes": [
            "f8654d14b6d6374c",
            "c2914cabde621045"
        ],
        "x": 774,
        "y": 119,
        "w": 252,
        "h": 182
    },
    {
        "id": "69b8262d1a3bba40",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ce312c8a6e8734f6",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "fceac92883eed5ce",
        "type": "ui_group",
        "name": "Input",
        "tab": "69b8262d1a3bba40",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f6603a94ad0a668e",
        "type": "ui_group",
        "name": "Output",
        "tab": "69b8262d1a3bba40",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a737e2ff842c331d",
        "type": "ui_group",
        "name": "Function",
        "tab": "69b8262d1a3bba40",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c2f5c11bd2d0da4d",
        "type": "ui_text_input",
        "z": "6705bbb95f3252fd",
        "g": "289a27507fb48f90",
        "name": "Diametro espira (D_espira_mm)",
        "label": "Diametro espira [mm]",
        "tooltip": "mm",
        "group": "fceac92883eed5ce",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 210,
        "y": 60,
        "wires": [
            [
                "5a23b820fec2d15c"
            ]
        ]
    },
    {
        "id": "51584db6980c1f5a",
        "type": "ui_text_input",
        "z": "6705bbb95f3252fd",
        "g": "289a27507fb48f90",
        "name": "Diametro exterior (D_exterior_mm)",
        "label": "Diametro exterior [mm]",
        "tooltip": "mm",
        "group": "fceac92883eed5ce",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "734bbd609d344e3a"
            ]
        ]
    },
    {
        "id": "741c254551d25eaa",
        "type": "ui_text_input",
        "z": "6705bbb95f3252fd",
        "g": "289a27507fb48f90",
        "name": "Modulo de Cortante (G_kpsi)",
        "label": "Modulo de Cortante [kpsi]",
        "tooltip": "kpsi",
        "group": "fceac92883eed5ce",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 220,
        "y": 140,
        "wires": [
            [
                "e64e4f23fb11ceaa"
            ]
        ]
    },
    {
        "id": "71b3fea8f5cfa766",
        "type": "ui_text_input",
        "z": "6705bbb95f3252fd",
        "g": "289a27507fb48f90",
        "name": "Número Espiras Activas (Na)",
        "label": "Número Espiras Activas",
        "tooltip": "",
        "group": "fceac92883eed5ce",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 220,
        "y": 180,
        "wires": [
            [
                "5ea9b80ab7aaa5d1"
            ]
        ]
    },
    {
        "id": "1e7b1c0c85ee8581",
        "type": "ui_text_input",
        "z": "6705bbb95f3252fd",
        "g": "289a27507fb48f90",
        "name": "Diametro Boquilla (D_boquilla_mm)",
        "label": "Diametro Boquilla [mm]",
        "tooltip": "mm",
        "group": "fceac92883eed5ce",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "3c16a779330c72c0"
            ]
        ]
    },
    {
        "id": "f8654d14b6d6374c",
        "type": "ui_text",
        "z": "6705bbb95f3252fd",
        "g": "b2946fec93a18c24",
        "group": "f6603a94ad0a668e",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Diametro espira [mm]",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "5ea9b80ab7aaa5d1",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Na",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1f3ea68fe2179f83",
        "type": "ui_button",
        "z": "6705bbb95f3252fd",
        "name": "",
        "group": "a737e2ff842c331d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "ba5818ab88fc5251"
            ]
        ]
    },
    {
        "id": "e64e4f23fb11ceaa",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "G_kpsi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4da9cd22d77ad07d",
        "type": "python3-function",
        "z": "6705bbb95f3252fd",
        "name": "",
        "func": "from math import pi\nfrom scipy.optimize import minimize\nimport numpy as np\n\n# Set_pressure =  800\n# Defl_disp = 60\n# D_exterior_in = 1.968503937007874\n# G_kpsi = 11600\n# Na = 7\n# D_boquilla_in = 1.5748031496062993\n# R_boquilla_in = 0.7874015748031497\n# A_boquilla_in = 1.9477913408083534\n\n# Input Variables\nSet_pressure = msg[\"payload\"][\"Set_pressure\"]\nD_espira_mm_initial = msg[\"payload\"][\"D_espira_mm\"]\nD_exterior_mm = msg[\"payload\"][\"D_exterior_mm\"]\nG_kpsi = msg[\"payload\"][\"G_kpsi\"]\nNa = msg[\"payload\"][\"Na\"]\nD_boquilla_mm = msg[\"payload\"][\"D_boquilla_mm\"]\nEsp_espiras = msg[\"payload\"][\"Esp_espiras\"]\n\n# Conditioned Variables\nD_exterior_in = D_exterior_mm / 25.4\nD_boquilla_in = D_boquilla_mm / 25.4\nR_boquilla_in = D_boquilla_in / 2\nA_boquilla_in = pi * R_boquilla_in**2\n#Defl_disp = Esp_espiras * Na\n\nprint(A_boquilla_in)\n\n\n# Definir la función objetivo\ndef objective_function(x):\n    D_espira_mm = x[0]\n    Porc_defl = x[1]\n    #node.log(D_espira_mm)\n    Defl_disp = Esp_espiras * Na - (D_espira_mm-D_espira_mm_initial)\n    print(Defl_disp)\n    return abs(((Porc_defl * Defl_disp / 25.4) * (((pow(D_espira_mm / 25.4, 4) * G_kpsi) / (pow(D_exterior_in, 3) * Na * 8)) * 1000)) / A_boquilla_in - Set_pressure)\n\n# Especificar el punto inicial de la optimización\ninitial_guess = [D_espira_mm_initial, 0.5]\nbounds = [(0, 20), (0.25, 0.95)]\n\n# Llamar a la función de minimización con restricciones\nresult = minimize(objective_function, initial_guess, bounds=bounds)\n\n# Imprimir los resultados\nprint(\"Resultado de la optimización con restricciones:\")\nprint(\"Valor de x que minimiza la función:\", result.x)\nprint(\"Valor mínimo de la función:\", result.fun)\n\nmsg['payload']=[result.x[0], result.x[1]]\nreturn msg\n\n#agregar restriccion de que no supere 0.5 en porc_defl\n# ecuación del defl = espacio_entre_espiras * Na - delta(d)\n# delta(d) = d_i-d_actual",
        "outputs": 1,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "091836aadbe18eae",
                "8eea1c14407e3ea7"
            ]
        ]
    },
    {
        "id": "ba5818ab88fc5251",
        "type": "function",
        "z": "6705bbb95f3252fd",
        "name": "function 5",
        "func": "msg.payload = {}\nvar keys = flow.keys()\nfor (let i = 0; i < keys.length; i++) {\n    msg.payload[keys[i]] = flow.get(keys[i])\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 440,
        "wires": [
            [
                "4da9cd22d77ad07d"
            ]
        ]
    },
    {
        "id": "847ba2ae7bb5c2d8",
        "type": "ui_text_input",
        "z": "6705bbb95f3252fd",
        "g": "289a27507fb48f90",
        "name": "Espacio entre Espiras (Esp_espiras)",
        "label": "Espacio entre Espiras",
        "tooltip": "",
        "group": "fceac92883eed5ce",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "c1286f81de88e08a"
            ]
        ]
    },
    {
        "id": "c1286f81de88e08a",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Esp_espiras",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f45716bacfc54c28",
        "type": "ui_text_input",
        "z": "6705bbb95f3252fd",
        "g": "289a27507fb48f90",
        "name": "Set Pressure (Set_pressure)",
        "label": "Set Pressure",
        "tooltip": "",
        "group": "fceac92883eed5ce",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "6f55b443bc03bd51"
            ]
        ]
    },
    {
        "id": "6f55b443bc03bd51",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Set_pressure",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5a23b820fec2d15c",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "D_espira_mm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "734bbd609d344e3a",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "D_exterior_mm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3c16a779330c72c0",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "D_boquilla_mm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "091836aadbe18eae",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "D_espira_mm_op",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "Porc_defl_op",
                "pt": "flow",
                "to": "payload[1]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "D_espira_mm_op_round",
                "pt": "flow",
                "to": "$round(payload[0], 1)\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "D_espira_mm_op_round",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 440,
        "wires": [
            [
                "63a0d74d03ea34a9",
                "ec55d3411ec798f8"
            ]
        ]
    },
    {
        "id": "ec55d3411ec798f8",
        "type": "function",
        "z": "6705bbb95f3252fd",
        "name": "function 6",
        "func": "msg.payload = {}\nvar keys = flow.keys()\nfor (let i = 0; i < keys.length; i++) {\n    msg.payload[keys[i]] = flow.get(keys[i])\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 500,
        "wires": [
            [
                "5d56bb13035c3151"
            ]
        ]
    },
    {
        "id": "5d56bb13035c3151",
        "type": "python3-function",
        "z": "6705bbb95f3252fd",
        "name": "",
        "func": "from math import pi\nimport numpy as np\nimport pandas as pd  # type: ignore\n\n# deflexion_disp = 60\n# set_pressure = 300  # msg['payload']['set_pressure']\n# D_espira_in = 0.3937007874015748\n# D_exterior_in = 1.968503937007874\n# G_kpsi = 11600\n# Na = 7\n# D_boquilla_in = 1.5748031496062993\n# R_boquilla_in = 0.7874015748031497\n# A_boquilla_in = 1.9477913408083534\n\n# Input Variables\nSet_pressure = msg[\"payload\"][\"Set_pressure\"]\nD_espira_mm_op_round = msg[\"payload\"][\"D_espira_mm_op\"]\nD_exterior_mm = msg[\"payload\"][\"D_exterior_mm\"]\nG_kpsi = msg[\"payload\"][\"G_kpsi\"]\nNa = msg[\"payload\"][\"Na\"]\nD_boquilla_mm = msg[\"payload\"][\"D_boquilla_mm\"]\nDefl_act = msg[\"payload\"][\"Defl_act\"]\n\n\n# Conditioned Variables\nD_exterior_in = D_exterior_mm / 25.4\nD_espira_in = D_espira_mm_op_round /25.4\nD_boquilla_in = D_boquilla_mm / 25.4\nR_boquilla_in = D_boquilla_in / 2\nA_boquilla_in = pi * R_boquilla_in**2\n\nDefl_disp = 49.07311817075443\n\nvar1 = pow(D_espira_in, 4) * G_kpsi\nvar2 = pow(D_exterior_in, 3) * Na * 8\n\nK_1 = var1 / var2\nK_2 = K_1 * 1000\n\n\ntable = {\"porc_deflexion\": [0.25, 0.4, 0.5, 0.8, 0.9, 0.95]}\ntable = pd.DataFrame(data=table)\n\ntable[\"desflexion_mm\"] = table[\"porc_deflexion\"] * Defl_disp\ntable[\"desflexion_in\"] = table[\"desflexion_mm\"] / 25.4\ntable[\"fmax\"] = table[\"desflexion_in\"] * K_2\ntable[\"pmax\"] = table[\"fmax\"] / 2\n\n\nprint(table)\nmsg['payload']=table.to_json(orient=\"records\")\n\nreturn msg\n",
        "outputs": 1,
        "x": 410,
        "y": 500,
        "wires": [
            [
                "a53c5af1687651e4"
            ]
        ]
    },
    {
        "id": "a53c5af1687651e4",
        "type": "json",
        "z": "6705bbb95f3252fd",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 590,
        "y": 500,
        "wires": [
            [
                "b940068493f0ec19",
                "a7312d9bdce24f0c"
            ]
        ]
    },
    {
        "id": "b940068493f0ec19",
        "type": "change",
        "z": "6705bbb95f3252fd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "c2914cabde621045",
        "type": "ui_table",
        "z": "6705bbb95f3252fd",
        "g": "b2946fec93a18c24",
        "group": "a737e2ff842c331d",
        "name": "",
        "order": 1,
        "width": "18",
        "height": "4",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "63a0d74d03ea34a9",
        "type": "link out",
        "z": "6705bbb95f3252fd",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "21a75caf50d9b495",
            "a8b59f73da29647a",
            "34bf33c2aead8b29"
        ],
        "x": 735,
        "y": 440,
        "wires": []
    },
    {
        "id": "21a75caf50d9b495",
        "type": "link in",
        "z": "6705bbb95f3252fd",
        "name": "link in 1",
        "links": [
            "63a0d74d03ea34a9"
        ],
        "x": 735,
        "y": 160,
        "wires": [
            [
                "f8654d14b6d6374c"
            ]
        ]
    },
    {
        "id": "a7312d9bdce24f0c",
        "type": "link out",
        "z": "6705bbb95f3252fd",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "c352ba731f60898e"
        ],
        "x": 675,
        "y": 540,
        "wires": []
    },
    {
        "id": "c352ba731f60898e",
        "type": "link in",
        "z": "6705bbb95f3252fd",
        "name": "link in 2",
        "links": [
            "a7312d9bdce24f0c"
        ],
        "x": 735,
        "y": 260,
        "wires": [
            [
                "c2914cabde621045"
            ]
        ]
    },
    {
        "id": "a2e2bb8dcb0d7ec4",
        "type": "inject",
        "z": "6705bbb95f3252fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 400,
        "wires": [
            [
                "ba5818ab88fc5251"
            ]
        ]
    },
    {
        "id": "8eea1c14407e3ea7",
        "type": "debug",
        "z": "6705bbb95f3252fd",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 360,
        "wires": []
    },
    {
        "id": "209e6109096bce1c",
        "type": "python3-function",
        "z": "6705bbb95f3252fd",
        "name": "",
        "func": "from math import inf, pi\nimport pandas as pd\nimport numpy as np\n\n# Input Variables\nSet_pressure = 44\nD_boquilla_mm = 33.7\nG_kpsi = 11600\nNa = 7\nD_exterior_mm = 60\nEsp_espiras = 11\nD_espira_mm = 1\nActual_pressure = 20\n\n# Input Variables\n# Set_pressure = msg[\"payload\"][\"Set_pressure\"]\n# D_espira_mm_initial = msg[\"payload\"][\"D_espira_mm\"]\n# D_exterior_mm = msg[\"payload\"][\"D_exterior_mm\"]\n# G_kpsi = msg[\"payload\"][\"G_kpsi\"]\n# Na = msg[\"payload\"][\"Na\"]\n# D_boquilla_mm = msg[\"payload\"][\"D_boquilla_mm\"]\n# Esp_espiras = msg[\"payload\"][\"Esp_espiras\"]\n\n# Constant Variables\nporc_defl = {\"porc_deflexion\": [0.25, 0.4, 0.5, 0.8, 0.9, 0.95]}\n\n# Conditioned Variables\nD_exterior_in = D_exterior_mm / 25.4\nD_boquilla_in = D_boquilla_mm / 25.4\nR_boquilla_in = D_boquilla_in / 2\nA_boquilla_in = pi * R_boquilla_in**2\nDefl_disp = Esp_espiras * Na\n\n\ndef findPressure(D_espira_mm, Defl_disp):  # type: ignore\n    D_espira_in = D_espira_mm / 25.4\n    var1 = pow(D_espira_in, 4) * G_kpsi\n    var2 = pow(D_exterior_in, 3) * Na * 8\n    K_1 = var1 / var2\n    K_2 = K_1 * 1000\n\n    table = pd.DataFrame(data=porc_defl)\n    table[\"desflexion_mm\"] = table[\"porc_deflexion\"] * Defl_disp\n    table[\"desflexion_in\"] = table[\"desflexion_mm\"] / 25.4\n    table[\"fmax\"] = table[\"desflexion_in\"] * K_2\n    table[\"pmax\"] = table[\"fmax\"] / A_boquilla_in\n\n    return table\n\n\nDefl_disp_itera = Defl_disp\nD_espira_mm_itera = D_espira_mm\nmin_pressure = inf\nmid_pressure = -inf\n\ntable_ite = pd.DataFrame(\n    columns=(\"D_espira_mm\", \"Defl_disp\", \"min_pressure\", \"mid_pressure\", \"max_pressure\")\n)\n\nif Set_pressure > Actual_pressure:\n    for D_espira_mm_itera in np.arange(D_espira_mm, 15, 0.5):\n        delta = abs(D_espira_mm - D_espira_mm_itera)\n        Defl_disp_itera = Defl_disp - delta\n        table = findPressure(D_espira_mm_itera, Defl_disp_itera)\n        min_pressure = table.iloc[0][\"pmax\"]\n        mid_pressure = table.loc[table[\"porc_deflexion\"] == 0.5][\"pmax\"].values[0]\n        max_pressure = table.iloc[-1][\"pmax\"]\n        row = {\n            \"D_espira_mm\": D_espira_mm_itera,\n            \"Defl_disp\": Defl_disp_itera,\n            \"min_pressure\": min_pressure,\n            \"mid_pressure\": mid_pressure,\n            \"max_pressure\": max_pressure,\n        }\n        table_ite = table_ite._append(row, ignore_index=True)  # type: ignore\n        if min_pressure < Set_pressure < mid_pressure:\n            break\n        pass\n    pass\nelse:\n\n    pass\n\nprint(table)\nprint(table_ite)\n\n\n# agregar restriccion de que no supere 0.5 en porc_defl\n# ecuación del defl = espacio_entre_espiras * Na - delta(d)\n# delta(d) = d_i-d_actual\n",
        "outputs": 1,
        "x": 620,
        "y": 620,
        "wires": [
            []
        ]
    }
]